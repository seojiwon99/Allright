<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="com.ar.lighthouse.admin.mapper.AdminMapper">
  

  	<insert id="insertNotice" parameterType="NoticeAdminVO">
	  	 <selectKey resultType="int" keyProperty="noticeCode" order="BEFORE">
	  		SELECT NVL(MAX(notice_code),1)+1 FROM ar_notice
	  	</selectKey>
	  	
	  	INSERT INTO ar_notice (
	  						notice_code
	  						, notice_title
	  						, notice_content
	  						<if test="upEnddate != null">
	  						, up_enddate
	  						</if>
	  						, notice_writer
	  						, notice_type
	  						) 
	  					values(
	  						#{noticeCode}
	  						, #{noticeTitle}
	  						, #{noticeContent}
	  						<if test="upEnddate != null">
	  						, #{upEnddate}
	  						</if>
	  						, 'Admin'
	  						, #{noticeType}
	  						)
  	</insert>
  	
  	<insert id="insertFaq" parameterType="FaqVO">
	  	 <selectKey resultType="int" keyProperty="faqCode" order="BEFORE">
	  		SELECT NVL(MAX(faq_code),1)+1 FROM ar_faq
	  	</selectKey>
	  	
	  	INSERT INTO ar_faq (
	  						faq_code
	  						, question_title
	  						, question_answer
	  						, faq_type
	  						) 
	  					values(
	  						#{faqCode}
	  						, #{questionTitle}
	  						, #{questionAnswer}
	  						, #{faqType}
	  						)
  	</insert>
  	
  	<select id="selectNoticeDetail">
  		select *
  		from ar_notice
  		where notice_code = #{noticeCode}
  	</select>
  	<select id="selectFaqDetail">
		select *
		from ar_faq
		where faq_code = #{faqCode}  	
  	</select>
  	
  	<select id="selectFaqList">
  	select rt.*
	FROM(
	    select ROWNUM r, ft.*
	    FROM(
	        SELECT faq_code
	                , find_inqtype(faq_type) type_name
	                , question_title
	                , question_answer
	                , faq_type
	        FROM ar_faq
	        WHERE 1=1
	        <if test="faqVO.questionTitle != null and !faqVO.questionTitle.equals('')">
            and question_title like '%'||#{faqVO.questionTitle}||'%' 
         	</if>
         	<if test="faqVO.faqType != null and !(faqVO.faqType == 0)">
  		  	and	faq_type = #{faqVO.faqType}
  		  	</if>
	        ORDER BY faq_code
	        ) ft
	         <![CDATA[
	    WHERE ROWNUM <= #{cri.pageNum} * #{cri.amount}
	    ]]>
	    ) rt
	WHERE rt.r > ( #{cri.pageNum} - 1) * #{cri.amount}
  	
  	
  	
  	</select>
  	
  	<select id="selectTotalFaq">
  		 SELECT count(*)
  		 FROM ar_faq
  		 WHERE faq_code > 0 
  		 <if test="questionTitle != null and !questionTitle.equals('')">
            and question_title like '%'||#{questionTitle}||'%' 
         </if>
         <if test="faqType != null and !(faqType == 0)">
  		  	and	faq_type = #{faqType}
 		  </if>
  	</select>
  	
  	
  	<update id="updateNotice">
	  	UPDATE ar_notice 
		SET		notice_title = #{noticeTitle}
				, notice_content = #{noticeContent}
				, up_enddate = #{upEnddate}
				, notice_type = #{noticeType}
		WHERE notice_code = #{noticeCode}
  	</update>
  	<update id="updateFaq">
  	  	update ar_faq
  		set question_title = #{questionTitle}
	  		, question_answer = #{questionAnswer}
  			, faq_type = #{faqType}
  		where faq_code = #{faqCode}
  	</update>
  	
  	
  	
  	<select id="selectDeclareList" resultType="DeclareVO">
		SELECT rt.declare_code, declare_code_name(rt.declare_reason) as declare_reason, rt.declare_content, rt.member_id, rt.declare_member, rt.declare_regdate
		FROM       (
		                SELECT   rownum r,  de.declare_code, de.declare_reason, de.declare_content, de.member_id, de.declare_member, de.declare_regdate
		                FROM   (SELECT
		                        *
		                        FROM ar_declare
		                        where declare_status = 'N'
								<if test="declareContent != null and !(declareContent.equals(''))">
								AND declare_content LIKE '%' || #{declareContent} || '%'
								</if>
								<if test="declareReason != null and !(declareReason.equals(''))">	
								AND declare_reason = #{declareReason}
								</if>
		                        order by declare_code desc) de
		                 <![CDATA[
		                where rownum <= #{pageNum} * #{amount} )rt
		                 ]]>
		WHERE rt.r  > ( #{pageNum} - 1) * #{amount}
  	</select>	
  	<select id="selectTotalDeclareCount" resultType="int">
  	select count(*)
	from ar_declare
	where declare_code > 0 AND declare_status = 'N'
	<if test="declareContent != null and !(declareContent.equals('')) ">
	AND declare_content LIKE '%' || #{declareContent} || '%'
	</if>
	<if test="declareReason != null and !(declareReason.equals(''))">	
	AND declare_reason = #{declareReason}
	</if>
  	</select>
  	
  	<select id="selectDeclareDetail" resultType="declareVO">
  	select 	d.declare_code
  			, declare_code_name(d.declare_reason) as declare_reason
  			, d.declare_regdate
  			, r.review_content
  			, d.declare_content
  			, d.member_id
  			,(select member_author from ar_member where member_id = d.member_id) as member_author
  			, d.declare_member
  			, r.product_code
  			, (select count(*) from ar_declare where member_id = d.member_id) as declare_count
	from ar_declare d JOIN ar_review r ON d.review_code = r.review_code
	where d.declare_code = #{declareCode}
  	</select>
  	
  	<select id="selectSuspReason">
  		select *
  		from ar_code 
  		where master_code = 'member_suspend_reason' 
  		order by code_id
  	</select>
  	<insert id="insertSuspend">
  		<selectKey resultType="int" keyProperty="suspendCode" order="BEFORE">
	  		SELECT NVL(MAX(suspend_code),1)+1 FROM ar_suspend
	  	</selectKey>
  	
  	insert into ar_suspend(	suspend_code
  							, declare_type
  							, declare_code
  							, member_id
  							, susp_reason
  							, susp_regdate
  							, susp_enddate
  							, susp_status)
				values 	  ( #{suspendCode}
							,#{declareType}
							,#{declareCode}
							,#{memberId}
							,#{suspReason}
							,sysdate
							, sysdate + #{suspDate}
							, #{suspStatus}
							)
  	</insert>
  	
  	
  	<update id="updateDeclareStatus">
	  	update ar_declare
		set declare_status = 'Y',
		suspend_status = #{suspStatus}
		where review_code = (select review_code
		                                     from ar_declare
		                                    where declare_code = #{declareCode})
  	</update>
  	
  	<!-- ClearDeclare -->
  	
  	<select id="selectClearDeclareList" resultType="DeclareVO">
		SELECT rt.declare_code, find_suspend_status_name(rt.suspend_status) as suspend_status
		, declare_code_name(rt.declare_reason) as declare_reason
		, rt.declare_content
		, rt.member_id
		, rt.declare_member
		, rt.declare_regdate
		FROM       (
		                SELECT   rownum r, de.suspend_status, de.declare_code, de.declare_reason, de.declare_content, de.member_id, de.declare_member, de.declare_regdate
		                FROM   (SELECT
		                        *
		                        FROM ar_declare
		                        where declare_status = 'Y'
								<if test="declareContent != null and !(declareContent.equals(''))">
								AND declare_content LIKE '%' || #{declareContent} || '%'
								</if>
								<if test="declareReason != null and !(declareReason.equals(''))">	
								AND declare_reason = #{declareReason}
								</if>
		                        order by declare_code desc) de
		                 <![CDATA[
		                where rownum <= #{pageNum} * #{amount} )rt
		                 ]]>
		WHERE rt.r  > ( #{pageNum} - 1) * #{amount}
  	</select>	
  	<select id="selectTotalClearDeclareCount" resultType="int">
  	select count(*)
	from ar_declare
	where declare_code > 0 AND declare_status = 'Y'
	<if test="declareContent != null and !(declareContent.equals('')) ">
	AND declare_content LIKE '%' || #{declareContent} || '%'
	</if>
	<if test="declareReason != null and !(declareReason.equals(''))">	
	AND declare_reason = #{declareReason}
	</if>
  	</select>
  	
  	
  	<!--  Inquiry -->
  	<select id="selectInquiryList">
 		SELECT rt.*
		FROM       (
		                SELECT   rownum r, aci.*
		                FROM   (SELECT *
		                        FROM AR_CUSTOM_INQUIRY
		                        where CUSTOM_INQUIRY_ANSWER_STATUS = 'N'
		                        <if test="customInquiryTitle != null and !(customInquiryTitle.equals('')) ">
								AND custom_inquiry_title LIKE '%' || #{customInquiryTitle} || '%'
								</if>
		                        order by CUSTOM_INQUIRY_REGDATE DESC, CUSTOM_INQUIRY_CODE desc) aci
		     			    <![CDATA[                   
		                where rownum <= #{pageNum} * #{amount} ) rt
		                ]]>
		WHERE rt.r  > ( #{pageNum} - 1 ) * #{amount}
  	
  	</select>
  	
  	<select id="selectInquiryDetail">
  	 	SELECT *
  	 	FROM ar_custom_inquiry
  	 	WHERE custom_inquiry_code = #{customInquiryCode}
  	</select>
  	
  	
  	<select id="selectTotalClearInquiryCount">
		  	select count(*)
			from ar_custom_inquiry
			where 1=1
			<if test='customInquiryAnswerStatus.equals("Y")'>
			AND custom_inquiry_answer_status = 'Y'
			</if>
			<if test='customInquiryAnswerStatus.equals("N")'>
			AND custom_inquiry_answer_status = 'N'
			</if>
			<if test='customInquiryTitle != null and !(customInquiryTitle.equals("")) '>
			AND custom_inquiry_title LIKE '%' || #{customInquiryTitle} || '%'
			</if>
  	</select>
  	
  	<select id="selectClearInquiryList">
  	 		SELECT rt.*
			FROM       (
			                SELECT   rownum r, aci.*
			                FROM   (SELECT *
			                        FROM AR_CUSTOM_INQUIRY
			                        where CUSTOM_INQUIRY_ANSWER_STATUS = 'Y'
                        			<if test='customInquiryTitle != null and !(customInquiryTitle.equals("")) '>
									AND custom_inquiry_title LIKE '%' || #{customInquiryTitle} || '%'
									</if>
			                        order by CUSTOM_INQUIRY_REGDATE DESC, CUSTOM_INQUIRY_CODE desc) aci
			     			    <![CDATA[                   
			                where rownum <= #{pageNum} * #{amount} ) rt
			                ]]>
			WHERE rt.r  > ( #{pageNum} - 1 ) * #{amount}
  	</select>
  	
  	<update id="updateCustomInquiry">
  		UPDATE ar_custom_inquiry
  		SET CUSTOM_INQUIRY_ANSWER = #{customInquiryAnswer},
  		CUSTOM_INQUIRY_ANSWER_STATUS = 	'Y'
  		WHERE custom_inquiry_code = #{customInquiryCode} 
  	</update>
  	
  	
  	<select id="selectMemberList" resultType="MemberDetailVO">
  		SELECT rt.*, d_count(rt.member_id) as declare_count, NVL(recent_susp_name(rt.member_id),'사용 가능') as susp_status
		FROM       (
		                SELECT   rownum r, am.*
		                FROM   (SELECT *
		                        FROM AR_MEMBER 
		                        where 1=1
		                        <if test="memberAuthor == 1 or memberAuthor == 3">
		                        AND MEMBER_AUTHOR IN (1,3)
		                        </if>
		                        <if test="memberAuthor == 2">
		                        AND MEMBER_AUTHOR = 2
		                        </if>
		                        <if test="memberId != null and !(memberId.equals(''))">
		                        AND MEMBER_ID LIKE '%' || #{memberId} || '%'
		                        </if>
		                        <if test="memberName != null and !(memberName.equals(''))">
		                        AND MEMBER_NAME LIKE '%' || #{memberName} || '%'
		                        </if>
		                        <if test="memberTel != null and !(memberTel.equals(''))">
		                        AND MEMBER_TEL LIKE '%' || #{memberTel} || '%'
		                        </if>
		                        <if test="businessNumber != null and !(businessNumber.equals(''))">
		                        AND BUSINESS_NUMBER LIKE '%' || #{businessNumber} || '%'
		                        </if>
		                        order by MEMBER_REGDATE DESC) am
		                        <![CDATA[   
		                where rownum <= #{pageNum} * #{amount} )rt
		                   ]]>
		WHERE rt.r  > (#{pageNum} - 1 ) * #{amount}
  	</select>
  	
  	
  	<select id="selectMemberDetailValue">
  	select *
	from(
			select m.*, s.susp_reason, s.susp_status, s.susp_regdate, s.susp_enddate, d_count(m.member_id) as declare_count , (select count(*) from ar_suspend where member_id = m.member_id) as susp_count
			from ar_member m LEFT JOIN ar_suspend s ON m.member_id = s.member_id
			WHERE m.member_id = #{memberId}
			ORDER BY s.SUSP_REGDATE desc)
	where rownum = 1
  	
  	</select>
  	
  	
  	
  	
  	
  	<insert id="insertSuspendByAdmin">
  	
  	<selectKey keyProperty="suspendCode" order="BEFORE" resultType="int">
  		SELECT  NVL(MAX(suspend_code),0)+1 FROM ar_suspend
  	</selectKey>
  	 INSERT INTO ar_suspend 	(
  	 							suspend_code
  	 							,member_id,
  	 							susp_reason
  	 							,susp_regdate
  	 							,susp_enddate
  	 							,susp_status)
  	 				VALUES 		(
  	 							#{suspendCode}
  	 							,#{memberId}
  	 							,#{suspReason}
  	 							, sysdate
  	 							, sysdate + #{suspDate}
  	 							, #{suspStatus}
  	 							)
  	</insert>
  	
  	<update id="updateSuspendStatus" parameterType="String">
  		update ar_suspend
      	set susp_status = 0
      	WHERE member_id = #{memberId} 
      	AND susp_enddate > sysdate
  	</update>
  	
  	
  	<select id="selectTotalUserCount" resultType="int">
	  	select count(*)
		from ar_member
		where 1 =  1
		<if test="memberAuthor == 1 or memberAuthor == 3">
		AND member_author IN (1,3)
		</if>
		<if test="memberAuthor == 2">
	  	AND member_author = 2
	  	</if>
    	<if test="memberId != null and !(memberId.equals(''))">
        AND MEMBER_ID LIKE '%' || #{memberId} || '%'
        </if>
        <if test="memberName != null and !(memberName.equals(''))">
        AND MEMBER_NAME LIKE '%' || #{memberName} || '%'
        </if>
        <if test="memberTel != null and !(memberTel.equals(''))">
        AND MEMBER_TEL LIKE '%' || #{memberTel} || '%'
        </if>
        <if test="businessNumber != null and !(businessNumber.equals(''))">
        AND BUSINESS_NUMBER LIKE '%' || #{businessNumber} || '%'
        </if>
  	
  	</select>
  	

  	<select id="selectProductList">
		  	SELECT  rt.*
			FROM       (
		                SELECT   rownum r, pr.*
		                FROM   (select pp.product_code, pp.product_name, pp.member_id,  mm.member_tel, mm.business_number, mm.member_email
                                from ar_products pp JOIN ar_member mm  ON pp.member_id = mm.member_id
								where 1=1
								<if test="memberId != null and !(memberId.equals(''))">
						        AND mm.MEMBER_ID LIKE '%' || #{memberId} || '%'
						        </if>
						        <if test="memberTel != null and !(memberTel.equals(''))">
						        AND mm.MEMBER_TEL LIKE '%' || #{memberTel} || '%'
						        </if>
						        <if test="businessNumber != null and !(businessNumber.equals(''))">
						        AND mm.BUSINESS_NUMBER LIKE '%' || #{businessNumber} || '%'
						        </if>
						        <if test="productCode != null and !(productCode.equals(''))">
						        AND pp.PRODUCT_CODE LIKE '%' || #{productCode} || '%'
		                        </if>
		                        order by product_regdate desc) pr
		                        <![CDATA[
		                WHERE rownum <= #{pageNum} * #{amount}) rt
		                ]]>
			WHERE rt.r > ( #{pageNum} - 1 ) * #{amount} 
  	</select>
  	
  	<select id="selectTotalProductCount">
  			SELECT count(*)
  			FROM ar_products pp JOIN ar_member mm ON pp.member_id = mm.member_id
  			WHERE 1=1
	    	<if test="memberId != null and !(memberId.equals(''))">
	        AND mm.MEMBER_ID LIKE '%' || #{memberId} || '%'
	        </if>
	        <if test="memberTel != null and !(memberTel.equals(''))">
	        AND mm.MEMBER_TEL LIKE '%' || #{memberTel} || '%'
	        </if>
	        <if test="businessNumber != null and !(businessNumber.equals(''))">
	        AND mm.BUSINESS_NUMBER LIKE '%' || #{businessNumber} || '%'
	        </if>
	        <if test="productCode != null and !(productCode.equals(''))">
	        AND pp.PRODUCT_CODE LIKE '%' || #{productCode} || '%'
	        </if>
  	</select>
  	
  	<delete id="deleteProductByAdmin">
  		DELETE FROM AR_PRODUCTS
  		WHERE PRODUCT_CODE = #{productCode}
  	</delete>
  	
  	
  	
  	
  	<select id="selectAdminNoticeList">
  	 		SELECT rt.*
			FROM       (
			                SELECT   rownum r, an.*
			                FROM   (SELECT *
			                        FROM ar_notice
			                        where 1=1
			                        <if test="noticeAdminVO.noticeTitle != null and !(noticeAdminVO.noticeTitle.equals('')) ">
									AND notice_title LIKE '%' || #{noticeAdminVO.noticeTitle} || '%'
									</if>
			                        order by notice_type desc, notice_regdate desc) an
			     			    <![CDATA[                   
			                where rownum <= #{cri.pageNum} * #{cri.amount} ) rt
			                ]]>
			WHERE rt.r  > ( #{cri.pageNum} - 1 ) * #{cri.amount}	
  	</select>
  	
  	
  	<select id="selectTotalNoticeCount" resultType ="int">
  		select count(*)
  		FROM ar_notice 
  		WHERE 1=1
  		<if test="noticeTitle != null and !(noticeTitle.equals('')) ">
  		AND notice_title LIKE '%' || #{noticeTitle} || '%'
  		</if>
  	</select>
  	
  	
  	<select id="selectEventBannerList">
  		SELECT *
		FROM AR_EVENT_IMG
		WHERE banner_delete = 'N'
		ORDER BY img_order
  	</select>
  	
  	<insert id="insertBanner">
	  	<selectKey resultType="int" keyProperty="eventImgCode" order="BEFORE">
	  	SELECT NVL(MAX(event_img_code), 0) + 1 FROM ar_event_img
	  	</selectKey>
  	
  		INSERT INTO AR_EVENT_IMG(	
  									EVENT_IMG_CODE
  									, IMG_ORDER
  									, IMG_NAME
  									, UPLOAD_NAME
  									, IMG_CONTENT
  									, BANNER_TYPE
  									, UPLOAD_PATH
  									, EVENT_CODE
  									)
  		VALUES (					#{eventImgCode}
  									, #{imgOrder}
  									, #{imgName}
  									, #{uploadName}
  									, #{imgContent}
  									, #{bannerType}
  									, #{uploadPath}
  									, #{eventCode}
  									)
  	</insert>
  	
  	<update id="updateBanner">
  		UPDATE AR_EVENT_IMG
  		SET 
  			<if test="bannerDelete != null">
  			banner_delete = #{bannerDelete}
  			</if>
  			<if test="bannerDelete == null">
  			IMG_ORDER = #{imgOrder}
  			, IMG_CONTENT = #{imgContent}
  			, BANNER_TYPE = #{bannerType}
  			, EVENT_CODE = #{eventCode}
  			</if>
  			<if test="uploadName != null">
  			, IMG_NAME = #{imgName}
  			, UPLOAD_NAME = #{uploadName}
  			, UPLOAD_PATH = #{uploadPath}
  			</if>
  		WHERE event_img_code = #{eventImgCode}
  	</update>
  	
  	<select id="selectBannerPath">
  		SELECT UPLOAD_PATH || '/' ||UPLOAD_NAME
  		FROM AR_EVENT_IMG
  		WHERE EVENT_IMG_CODE = #{eventImgCode}
  	</select>
  	
  </mapper>
  