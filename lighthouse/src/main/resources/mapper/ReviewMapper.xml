<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="com.ar.lighthouse.review.mapper.ReviewMapper">
  
	
  	<resultMap type="ReviewVO" id="selectReviewInfo">
  		<result column="review_code" property="reviewCode" />
  		<result column="member_id" property="memberId" />
  		<result column="product_code" property="productCode" />
  		<result column="review_content" property="reviewContent" />
  		<result column="review_star" property="reviewStar"/>
  		<result column="review_regdate" property="reviewRegdate"/>
  		<association property="reviewImg" resultMap="reviewImg"/>
  	</resultMap>
  	
  	<resultMap type="ImgsVO" id="reviewImg">
  		<result column="img_code" property="imgCode"/>
  		<result column="parent_code" property="parentCode"/>
  		<result column="img_order" property="imgOrder"/>
  		<result column="img_name" property="imgName"/>
  		<result column="upload_name" property="uploadName"/>
  		<result column="img_content" property="imgContent"/>
  		<result column="img_regdate" property="imgRegdate"/>
  		<result column="upload_path" property="uploadPath"/>
  	</resultMap>
  	
  	<select id="selectReviewList" resultMap="selectReviewInfo" resultType="reviewVO">
		SELECT *
		FROM(SELECT 
		           	ROWNUM rn
		              , r.review_code
			       , r.member_id
			       , r.product_code
			       , r.review_content
			       , r.review_star
			       , r.review_regdate
			       , i.img_code
			       , i.parent_code
			       , i.img_order
			       , i.img_name
			       , i.upload_name
			       , i.img_content
			       , i.img_regdate
			       , REPLACE(i.upload_path,'\','/') as upload_path
				FROM ar_review r left outer join ar_imgs i
				ON r.review_code = i.review_code
				WHERE r.product_code = #{reviewVO.productCode}
				AND r.review_status = 'N'
				<![CDATA[
				AND	ROWNUM <= #{cri.pageNum} * #{cri.amount}
				order by r.review_regdate desc )
		WHERE rn > ( #{cri.pageNum} - 1 ) * #{cri.amount}
		]]>
	order by review_regdate DESC
  	</select>
  	
  	<select id="countReview" parameterType="ReviewVO" resultType="int">
  		SELECT count(*) as reviewCount 
  		FROM ar_review 
  		where product_code = #{productCode}
  		AND review_status = 'N'
  	</select>
  	
  	<select id="reviewStarAvg" resultType="int">
  		SELECT NVL(ROUND(AVG(REVIEW_STAR),0),0) as reviewStarAvg 
  		from ar_review 
  		where product_code = #{productCode}
  		AND review_status = 'N'
  	</select>
  	
  	<insert id="insertReview" parameterType="ReviewVO">
  	<selectKey resultType="int" keyProperty="reviewCode" order="BEFORE">
  		SELECT nvl((max(review_code)),0)+1 FROM ar_review
  	</selectKey>
  	insert into ar_review 
  		(
  		review_code
  		,product_code
  		,member_id
  		,review_content
  		,review_star
  		)
	values 
		(
		#{reviewCode}
		,#{productCode}
		,#{memberId}
		,#{reviewContent}
		,#{reviewStar}
		)
  	</insert>
  	
  	<insert id="insertReviewImg">
  	<selectKey resultType="int" keyProperty="imgCode" order="BEFORE">	
  		SELECT NVL(MAX(img_code),0)+1 FROM ar_imgs  
  	</selectKey>
  		insert into ar_imgs
    		(img_code
    		,parent_code
    		,img_order
    		,img_name
    		,upload_name
    		,img_content
    		,review_code
    		,upload_path
    		)
    		
    	values(
    		#{imgCode}
    	   ,'2'
    	   ,'1'
    	   ,#{imgName}
    	   ,#{uploadName}
    	   ,#{imgContent}
    	   ,#{reviewCode}
    	   ,#{uploadPath}
    	   )
  	</insert>
  	
  	<!-- 수정 -->
  	<update id="updateReview">
  	
	update ar_review set 
	       review_content = #{reviewContent}
	  	  ,review_star = #{reviewStar}
	 where review_code = #{reviewCode}
	        
  	</update>
  	
  	<update id="updateReviewImg">
  		update ar_imgs set
  			img_code = #{imgCode}
    		,parent_code = '2'
    		,img_order = '1'
    		,img_name = #{imgName}
    		,upload_name =#{uploadName}
    		,img_content =#{imgContent}
    		,review_code =#{reviewCode}
    		,upload_path = #{uploadPath}
  		where review_code = #{reviewCode} 
  	</update>
  	
  	<!-- 리뷰 삭제 -->
  	<update id="deleteReview">
  		UPDATE ar_review
  		SET review_status = 'Y'
  		WHERE review_code = #{reviewCode}
  	</update>
  	

  	
  	<!-- 리뷰신고 코드-->
  	<select id="reviewDeclareCode" resultType="CodeVO">
  		select master_code, code_id, code_name, code_desc, code_use  
  		from ar_code where master_code = 'review_declare_reason'
  	</select>
  	
  	<!-- 리뷰 신고 -->
  	<insert id="reviewDeclare">
	  	<selectKey resultType="int" keyProperty="declareCode" order="BEFORE">	
	  		SELECT NVL(MAX(declare_code),0 )+1 FROM ar_declare  
	  	</selectKey>
  		insert into ar_declare
  		(
  		declare_code
  		,review_code
  		,member_id
  		,declare_reason
  		,declare_content
  		,declare_member
  		)
       values( 
       	#{declareCode}
       ,#{reviewCode}
       ,#{memberId}
       ,#{declareReason}
       ,#{declareContent}
       ,#{declareMember}
       )
  	</insert>
  	
  </mapper>