<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="com.ar.lighthouse.orders.mapper.OrdersMapper">
  
  	<!-- 주문결제 필요 데이터 파싱 -->
  	<select id="selectOrders" resultType="com.ar.lighthouse.orders.service.OrdersVO">
  	SELECT c.member_id, m.member_name ,m.member_email, m.member_tel, r.delivery_cost, r.delivery_service, r.product_code,
			m.member_addr, m.member_details_addr,c.cart_count, p.option_name, p.option_value, p.option_price,
			r.product_name, r.sale_price, r.product_cost, i.parent_code, i.upload_name, p.option_code
	FROM ar_cart c
			LEFT JOIN ar_option p ON c.option_code = p.option_code
			LEFT JOIN ar_member m ON c.member_id = m.member_id
			LEFT JOIN ar_products r ON p.product_code = r.product_code
			LEFT JOIN ar_imgs i ON p.product_code = i.product_code
	WHERE c.member_id = #{memberId} AND c.cart_code = #{cartCode}
  	</select>
 
 
 	<!-- 구매자 쿠폰 파싱 -->
 	<select id="selectCoupon" resultType="com.ar.lighthouse.orders.service.OrdersVO">
 	SELECT m.member_id, c.coupon_code, b.issue_date, b.coupon_use, c.coupon_content, c.coupon_condition, b.mycoupon_code,
    c.coupon_name, c.coupon_discount_price, c.coupon_discount_rate, c.coupon_max_price, c.coupon_min_price,
    c.coupon_deadline, c.coupon_base, b.end_date, b.using_date
    FROM ar_member m
    LEFT OUTER JOIN ar_coupon_box b ON m.member_id = b.member_id
    LEFT OUTER JOIN ar_coupons c ON b.coupon_code = c.coupon_code
    where m.member_id = #{memberId}
 	</select>
 	
 	<!-- 배송요청 사항 코드 -->
 	<select id="selectCode" resultType="CodeVO">
 	 SELECT * FROM AR_CODE
     WHERE MASTER_CODE = 'delivery_request'
 	</select>
 	
 	<!-- 기간 지난 쿠폰 사용불가로 변경 -->
 	<update id="updatetNotCoupon">
 		UPDATE AR_COUPON_BOX 
 		SET coupon_use = 'N' 
 		WHERE MEMBER_ID = #{memberId} AND MYCOUPON_CODE = #{mycouponCode}
 	</update>
  
  	<!-- 토스페이먼츠 결제DB insert -->
  	<insert id="insertCredit">
  	INSERT INTO AR_CREDIt (PAYMENTKEY, TYPE, ORDERID, ORDERNAME, METHOD, CURRENCY, MID, BALANCEAMOUNT, TOTALAMOUNT, APPROVEDAT)
    VAlUES (#{paymentKey}, #{type}, #{orderId}, #{orderName}, #{method},#{currency},#{mId},#{balanceAmount},#{totalAmount},#{approvedAt})
  	</insert>
  	
  	<!-- 주문정보 저장 (배송지 등)-->
  	<insert id="insertOrderPayVO">
  		<selectKey resultType="int" keyProperty="orderCode" order="BEFORE">
			SELECT NVL(MAX(ORDER_CODE),1) + 1 FROM AR_ORDERS
		</selectKey>
		 INSERT INTO AR_ORDERS (ORDER_CODE, MEMBER_ID,ORDER_PRICE  ,ORDER_ADDR, ORDER_DETAILS_ADDR, RECIPIENT_NAME, RECIPIENT_TEL, REQUESTED_TERM)
         VALUES(#{orderCode} ,#{memberId}, #{OrderPayVO.orderPrice}, #{OrderPayVO.orderAddr}, #{OrderPayVO.orderDetailsAddr}, #{OrderPayVO.recipientName} 
        ,#{OrderPayVO.recipientTel},#{OrderPayVO.requestedTerm})
  	</insert>
  	
  	<!-- 주문 내역 페이지 저장 데이터 -->
  	
  </mapper>